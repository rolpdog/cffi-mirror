on: push

jobs:
#  sdist:
#    name: Build sdist
#    runs-on: ubuntu-20.04
#    steps:
#    - name: clone repo
#      uses: actions/checkout@v2
#
#    - name: Install a python
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.x
#
#    - name: Build sdist
#      run: |
#        rm -rf dist/
#        python -m pip install build
#        python -m build --sdist
#
#    - name: Upload sdist artifact
#      uses: actions/upload-artifact@v2
#      with:
#        path: dist

#  linux:
#    runs-on: ubuntu-20.04
#    strategy:
#      matrix:
#        include:
#        - spec: cp27-manylinux_x86_64
#          cibw_version: cibuildwheel<2.0  # py2.7 is not supported on CIBW 2.0+
#          manylinux_img: manylinux1  # build really old Pythons on manylinux1
#        - spec: cp36-manylinux_x86_64
#          manylinux_img: manylinux1  # build really old Pythons on manylinux1
#        - spec: cp37-manylinux_x86_64
#        - spec: cp38-manylinux_x86_64
#        - spec: cp39-manylinux_x86_64
#        - spec: cp310-manylinux_x86_64
#        - spec: cp27-manylinux_i686
#          cibw_version: cibuildwheel<2.0  # py2.7 is not supported on CIBW 2.0+
#          manylinux_img: manylinux1  # build really old Pythons on manylinux1
#        - spec: cp36-manylinux_i686
#          manylinux_img: manylinux1  # build really old Pythons on manylinux1
#        - spec: cp37-manylinux_i686
#        - spec: cp38-manylinux_i686
#        - spec: cp39-manylinux_i686
#        - spec: cp310-manylinux_i686
#    steps:
#    - name: clone repo
#      uses: actions/checkout@v2
#
#    - name: Build/test wheels
#      env:
#        CIBW_BUILD: ${{ matrix.spec }}
#        # TODO: update defaults to '' to fallthru once CIBW 2.1.3 ships: https://github.com/pypa/cibuildwheel/pull/829
#        CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_img || 'manylinux2010' }}
#        CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_img || 'manylinux2010' }}
#      run: |
#        python -m pip install --upgrade pip
#        python -m pip install --upgrade "${{ matrix.cibw_version || 'cibuildwheel' }}"
#        CIBW_ARCHS_LINUX='auto' CIBW_BEFORE_BUILD='yum install -y texinfo && curl -L -O https://github.com/libffi/libffi/archive/v3.2.1.tar.gz && tar zxf v3.2.1.tar.gz && cd libffi-3.2.1 && ./autogen.sh && ./configure && make && make install && ldconfig' CIBW_TEST_REQUIRES='pytest' CIBW_TEST_COMMAND='python -m pytest {project}/c {project}/testing' python -m cibuildwheel --output-dir dist .
#
#    - name: Upload artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        path: dist

## FIXME: merge to combo Mac job and remove?
#  macos-arm64-wheels:
#    name: Build/test MacOS arm64 wheels
#    defaults:
#      run:
#        shell: arch -arm64 bash --noprofile --norc -eo pipefail {0}
#    runs-on: [self-hosted, macOS]
#    steps:
#    - name: clone repo
#      uses: actions/checkout@v2
#
#    - name: forensics
#      run: |
#        arch
#        zsh -c 'echo hi mom from $(arch)'
#        /usr/bin/python3 -V
#        pwd
#        ls -la
#
#    - name: build wheel prereqs
#      run: |
#        /usr/bin/pip3 install cibuildwheel --upgrade
#        brew uninstall --ignore-dependencies libffi || true
#
#    - name: build wheels
#      env:
#        CIBW_BUILD: cp38-macosx_arm64 cp39-macosx_arm64 cp310-macosx_arm64
#        CIBW_TEST_REQUIRES: pytest
#        CIBW_TEST_COMMAND: pip install pip --upgrade; cd {project}; pytest
#        MACOSX_DEPLOYMENT_TARGET: '11.0'
#        SDKROOT: macosx11.3
#      run: |
#        /usr/bin/python3 -m cibuildwheel --output-dir dist
#
#
#    - name: upload artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        path: dist

  macos:
    name: Build/test MacOS wheels
    defaults:
      run:
        shell: ${{ matrix.run_wrapper || 'bash --noprofile --norc -eo pipefail {0}' }}
    runs-on: ${{ matrix.runs_on || 'macos-10.15' }}
    strategy:
      matrix:
        include:
        # build for x86_64 under the default hosted macOS 10.x x86_64 runner
#        - spec: cp27-macosx_x86_64
#          cibw_version: cibuildwheel<2.0  # py2.7 is not supported on CIBW 2.0+
#        - spec: cp36-macosx_x86_64
#        - spec: cp37-macosx_x86_64
#        - spec: cp38-macosx_x86_64
#        - spec: cp39-macosx_x86_64
#        - spec: cp310-macosx_x86_64
        # build for arm64 under a hacked macOS 12 self-hosted x86_64-on-arm64 runner until arm64 is fully supported
        # FIXME: ? cp38-macosx_arm64 requires special handling and fails some test_zdist tests under cibw 2.1.2, skip it (so Apple's XCode python3 won't have a wheel)
        - spec: cp39-macosx_arm64
          deployment_target: '11.0'
          runs_on: [self-hosted, macOS]
          run_wrapper: arch -arm64 bash --noprofile --norc -eo pipefail {0}
          sdkroot: macosx11.3

        - spec: cp310-macosx_arm64
          deployment_target: '11.0'
          runs_on: [self-hosted, macOS]
          run_wrapper: arch -arm64 bash --noprofile --norc -eo pipefail {0}
          sdkroot: macosx11.3
    steps:
    - name: clone repo
      uses: actions/checkout@v2

    - name: forensics
      run: |
        arch
        zsh -c 'echo hi mom from $(arch)'
        /usr/bin/python3 -V
        pwd
        ls -la

    - name: build wheel prereqs
      run: |
        /usr/bin/pip3 install --user --upgrade "${{ matrix.cibw_version || 'cibuildwheel' }}"
        brew uninstall --ignore-dependencies libffi || true

    - name: build wheels
      env:
        CIBW_BUILD: ${{ matrix.spec }}
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: pip install pip --upgrade; cd {project}; pytest
      run: |
        if [[ -n "${{ matrix.deployment_target || '' }}" ]]
        then
            export MACOSX_DEPLOYMENT_TARGET="${{ matrix.deployment_target || '' }}"
        fi

        if [[ -n "${{ matrix.sdkroot || '' }}" ]]
        then
            export SDKROOT="${{ matrix.sdkroot || '' }}"
        fi

        /usr/bin/python3 -m cibuildwheel --output-dir dist


    - name: upload artifacts
      uses: actions/upload-artifact@v2
      with:
        path: dist

